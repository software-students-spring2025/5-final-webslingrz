name: CI

# 1: Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

# 2: environment variables for container registry (No REGISTRY needed cuz docker hub is default)
env:
  IMAGE_NAME: "bt2181/webslingerz"
  MONGO_URI: "mongodb://localhost:27017/birdgame"
  SECRET_KEY: "devsecret"

# 3: jobs
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Install Python 
        uses: actions/setup-python@v5
      - name: Setup Containers with Docker Compose
        run: |
          docker compose -f docker-compose-dev.yml up --build -d
      - name: Wait for services to be ready
        run: sleep 10
      - name: Test backend
        working-directory: backend
        run: |
          pip install -r requirements.txt
          pip install pytest
          python -m pytest
  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: docker build -t webslingerz ./backend
      - name: Tag the Docker Image
        run: docker tag webslingerz bt2181/webslingerz:${GITHUB_SHA::7}
      - name: Push image to Docker Hub
        run: docker push $(echo $IMAGE_NAME):${GITHUB_SHA::7}
  
  deploy:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub

    steps:
      - name: Copy docker compose to digital ocean
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/${{ secrets.USERNAME }}/app/"

      - name: Deploy to Digital Ocean droplet via password
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA
          script: |
            cd /home/${{ secrets.USERNAME }}/app/
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker compose up --build -d